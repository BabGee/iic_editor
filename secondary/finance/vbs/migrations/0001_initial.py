# -*- coding: utf-8 -*-
# Generated by Django 1.9.2 on 2017-06-23 14:52
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('administration', '0001_initial'),
        ('upc', '0001_initial'),
        ('crm', '0001_initial'),
        ('bridge', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('is_default', models.NullBooleanField(default=False)),
                ('credit_limit', models.DecimalField(blank=True, decimal_places=2, max_digits=19, null=True)),
                ('account_branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='upc.InstitutionTill')),
            ],
        ),
        migrations.CreateModel(
            name='AccountCharge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=50)),
                ('min_amount', models.IntegerField()),
                ('max_amount', models.IntegerField()),
                ('charge_value', models.DecimalField(blank=True, decimal_places=2, max_digits=19, null=True)),
                ('is_percentage', models.BooleanField(default=False)),
                ('description', models.CharField(blank=True, max_length=50)),
                ('credit', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='AccountManager',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('credit', models.BooleanField(default=False)),
                ('transaction_reference', models.CharField(blank=True, max_length=45, null=True)),
                ('is_reversal', models.BooleanField(default=False)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=19)),
                ('charge', models.DecimalField(decimal_places=2, max_digits=19)),
                ('balance_bf', models.DecimalField(decimal_places=2, max_digits=19)),
                ('credit_paid', models.BooleanField(default=False)),
                ('credit_time', models.IntegerField(blank=True, help_text=b'In Days', null=True)),
                ('credit_due_date', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AccountStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=45, unique=True)),
                ('description', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='AccountType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=45)),
                ('deposit_taking', models.BooleanField(default=False)),
                ('min_balance', models.DecimalField(blank=True, decimal_places=2, max_digits=19, null=True)),
                ('max_balance', models.DecimalField(blank=True, decimal_places=2, max_digits=19, null=True)),
                ('loan_interest_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=19, null=True)),
                ('loan_time', models.IntegerField(blank=True, help_text=b'In Days', null=True)),
                ('saving_interest_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=19, null=True)),
                ('saving_time', models.IntegerField(blank=True, help_text=b'In Days', null=True)),
                ('description', models.CharField(max_length=100)),
                ('compound_interest', models.BooleanField(default=False)),
                ('daily_withdrawal_limit', models.DecimalField(blank=True, decimal_places=2, max_digits=19, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CreditOverdue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('description', models.CharField(max_length=100)),
                ('overdue_time', models.IntegerField(blank=True, help_text=b'In Days', null=True)),
                ('notification_details', models.CharField(max_length=1920)),
                ('account_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vbs.AccountType')),
                ('product_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='crm.ProductItem')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bridge.Service')),
            ],
        ),
        migrations.CreateModel(
            name='CreditOverdueStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=45, unique=True)),
                ('description', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='CreditType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=45, unique=True)),
                ('description', models.CharField(max_length=100)),
                ('interest_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=19, null=True)),
                ('interest_time', models.IntegerField(blank=True, help_text=b'In Days', null=True)),
                ('min_time', models.IntegerField(blank=True, help_text=b'In Days', null=True)),
                ('max_time', models.IntegerField(blank=True, help_text=b'In Days', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='InvestmentAccountType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=45, unique=True)),
                ('description', models.CharField(max_length=100)),
                ('nominal_value', models.DecimalField(blank=True, decimal_places=2, max_digits=19, null=True)),
                ('investment_loan_allowed', models.DecimalField(decimal_places=2, help_text=b'In Percentage', max_digits=19)),
                ('gateway', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='administration.Gateway')),
                ('product_item', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='crm.ProductItem')),
            ],
        ),
        migrations.CreateModel(
            name='InvestmentManager',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=19)),
                ('share_value', models.DecimalField(decimal_places=2, max_digits=19)),
                ('balance_bf', models.DecimalField(decimal_places=2, max_digits=19)),
                ('processed', models.BooleanField(default=False)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vbs.Account')),
                ('investment_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vbs.InvestmentAccountType')),
            ],
        ),
        migrations.AddField(
            model_name='creditoverdue',
            name='status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vbs.CreditOverdueStatus'),
        ),
        migrations.AddField(
            model_name='accounttype',
            name='credit_type',
            field=models.ManyToManyField(blank=True, to='vbs.CreditType'),
        ),
        migrations.AddField(
            model_name='accounttype',
            name='gateway',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='administration.Gateway'),
        ),
        migrations.AddField(
            model_name='accounttype',
            name='institution',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='upc.Institution'),
        ),
        migrations.AddField(
            model_name='accounttype',
            name='product_item',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='crm.ProductItem'),
        ),
        migrations.AddField(
            model_name='accountmanager',
            name='credit_overdue',
            field=models.ManyToManyField(blank=True, to='vbs.CreditOverdue'),
        ),
        migrations.AddField(
            model_name='accountmanager',
            name='dest_account',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dest_account', to='vbs.Account'),
        ),
        migrations.AddField(
            model_name='accountmanager',
            name='source_account',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vbs.Account'),
        ),
        migrations.AddField(
            model_name='accountcharge',
            name='account_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vbs.AccountType'),
        ),
        migrations.AddField(
            model_name='accountcharge',
            name='payment_method',
            field=models.ManyToManyField(blank=True, to='bridge.PaymentMethod'),
        ),
        migrations.AddField(
            model_name='accountcharge',
            name='service',
            field=models.ManyToManyField(blank=True, to='bridge.Service'),
        ),
        migrations.AddField(
            model_name='account',
            name='account_status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vbs.AccountStatus'),
        ),
        migrations.AddField(
            model_name='account',
            name='account_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vbs.AccountType'),
        ),
        migrations.AddField(
            model_name='account',
            name='credit_limit_currency',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='administration.Currency'),
        ),
        migrations.AddField(
            model_name='account',
            name='gateway_profile',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='upc.GatewayProfile'),
        ),
    ]
